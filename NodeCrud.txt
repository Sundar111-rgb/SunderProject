const bodyParser = require("body-parser");
const express = require("express");
const cors = require("cors");
const app = express();
const mysql = require('mysql');

const db = mysql.createPool({
host: "localhost",
user: "root",
password: "chauhan1234@#",
database: "cruddemo",
});
 
app.use(cors());
app.use(express.json())
app.use(bodyParser.urlencoded({ extended:true }));

app.get("/api/get", (req,res) => { 
 const sqlSelect = "select * from Employee";
    db.query(sqlSelect,(err,result) => {
        console.log(result);
        res.send(result); 
    });
});

app.post("/api/insert",(req,res) => {
    const Name = req.body.Name;
    const EmpCode  = req.body.EmpCode;
    const Salary = req.body.Salary;
    const sqlInsert = "insert into Employee(Name,EmpCode,Salary) values(?,?,?);"
    db.query(sqlInsert,[Name,EmpCode,Salary],(err,result) => {
        console.log(result);
        res.send("Row Inserted Successfully"); 
     });
});

app.delete('/api/delete/:EmpID',(req,res) => {
    
    db.query("delete from Employee where EmpID = ?",[req.params.EmpID],(err,result) => { 
        if(err) console.log(err); 
        res.send("Deleted Successfully");
    });
});

app.put("/api/update",(req,res) => {
    const EmpID = req.body.EmpID;
    const Name = req.body.Name;
    const EmpCode  = req.body.EmpCode;
    const Salary = req.body.Salary;
    const sqlUpdate = "update Employee set  Name = ?,EmpCode = ?,Salary = ? where EmpID = ?";

    db.query(sqlUpdate,[Name,EmpCode,Salary,EmpID],(err, result) => { if (err) console.log(err); });
});

app.listen(3001, ()=> {
 console.log("running on port 3001")
});

------------------------------------------------------------------------------------------------------------------------------------------------------------
 {
  "name": "server",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "start": "node index.js",
    "devStart": "nodemon index.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "body-parser": "^1.19.0",
    "cors": "^2.8.5",
    "express": "^4.17.1",
    "mysql": "^2.18.1",
    "nodemon": "^2.0.7"
  }
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
import React, { useState, useEffect } from 'react';
import logo from './logo.svg';
import './App.css';
import Axios from "axios";

function App() {
  
  const [Name,setName] = useState("");
  const [EmpCode, setEmpCode] = useState(""); 
  const [Salary,setSalary] = useState("");
  const [data,setData] = useState([]);

  useEffect(()=>{
    Axios.get("http://localhost:3001/api/get").then((response)=>{
       setData(response.data);
       console.log("-------------->>>>",data);
    });
  },[]);

  const submitReview = () => {
    Axios.post("http://localhost:3001/api/insert",{
      Name: Name,
      EmpCode: EmpCode,
      Salary: Salary
    })
    setData([
      ...data,
      { Name: Name, EmpCode: EmpCode, Salary: Salary },
    ]);
  };

  const onDeleteReview = (EmpID) => {
    Axios.delete(`http://localhost:3001/api/delete/${EmpID}`);
  };

  const onUpdateReview = (EmpID) => {
    

    Axios.put("http://localhost:3001/api/update",{
        Name: Name,
        EmpCode: EmpCode,
        Salary: Salary,
        EmpID:EmpID
        });
   // setNewReview("");
  }

  return (
    <div className="App">
     <h1>CRUD Application</h1>

     <div>
        <label>Name:</label>
        <input type="text" name="Name" onChange={(e) => { setName(e.target.value);  }} />
     </div>

     <div>
        <label>Emp Code:</label>
        <input type="text" name="EmpCode" onChange={(e) => { setEmpCode(e.target.value);  }} />
     </div>

     <div>
        <label>Salary:</label>
        <input type="text" name="Salary" onChange={(e) => { setSalary(e.target.value);  }} />
     </div>

        <button onSubmit={submitReview}>Save</button>

        <div className="App">
            <table>
              <thead>
              <tr>
              <th>EmpID</th>
              <th>Name</th>
              <th>EmpCode</th>
              <th>Salary</th>
              </tr>
              </thead>
              <tbody>
               
          { data.map((val,i) => {
               return (
                  <tr>
                  <td>{val.EmpID}</td>
                  <td>{val.Name}</td>
                  <td>{val.EmpCode}</td>
                  <td>{val.Salary}</td>
                  <button onClick={() => { onDeleteReview(val.EmpID)}}>delete</button>
                  <button onClick={() => { onUpdateReview(val.EmpID)}}>Update</button>
                </tr>
               )
           })
         } 
         </tbody>
          </table>
          </div>
        </div>
    
  );
}

export default App;



